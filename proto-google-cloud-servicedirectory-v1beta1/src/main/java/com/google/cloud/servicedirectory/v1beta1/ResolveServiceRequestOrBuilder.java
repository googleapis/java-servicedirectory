/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/servicedirectory/v1beta1/lookup_service.proto

package com.google.cloud.servicedirectory.v1beta1;

public interface ResolveServiceRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.servicedirectory.v1beta1.ResolveServiceRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The name of the service to resolve.
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Required. The name of the service to resolve.
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Optional. The maximum number of endpoints to return. Defaults to 25. Maximum is 100.
   * If a value less than one is specified, the Default is used.
   * If a value greater than the Maximum is specified, the Maximum is used.
   * </pre>
   *
   * <code>int32 max_endpoints = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxEndpoints.
   */
  int getMaxEndpoints();

  /**
   *
   *
   * <pre>
   * Optional. The filter applied to the endpoints of the resolved service.
   * General filter string syntax:
   * &lt;field&gt; &lt;operator&gt; &lt;value&gt; (&lt;logical connector&gt;)
   * &lt;field&gt; can be "name" or "metadata.&lt;key&gt;" for map field.
   * &lt;operator&gt; can be "&lt;, &gt;, &lt;=, &gt;=, !=, =, :". Of which ":" means HAS and is
   * roughly the same as "=".
   * &lt;value&gt; must be the same data type as the field.
   * &lt;logical connector&gt; can be "AND, OR, NOT".
   * Examples of valid filters:
   * * "metadata.owner" returns Endpoints that have a label with the
   *   key "owner", this is the same as "metadata:owner"
   * * "metadata.protocol=gRPC" returns Endpoints that have key/value
   *   "protocol=gRPC"
   * * "metadata.owner!=sd AND metadata.foo=bar" returns
   *   Endpoints that have "owner" field in metadata with a value that is not
   *   "sd" AND have the key/value foo=bar.
   * </pre>
   *
   * <code>string endpoint_filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The endpointFilter.
   */
  java.lang.String getEndpointFilter();
  /**
   *
   *
   * <pre>
   * Optional. The filter applied to the endpoints of the resolved service.
   * General filter string syntax:
   * &lt;field&gt; &lt;operator&gt; &lt;value&gt; (&lt;logical connector&gt;)
   * &lt;field&gt; can be "name" or "metadata.&lt;key&gt;" for map field.
   * &lt;operator&gt; can be "&lt;, &gt;, &lt;=, &gt;=, !=, =, :". Of which ":" means HAS and is
   * roughly the same as "=".
   * &lt;value&gt; must be the same data type as the field.
   * &lt;logical connector&gt; can be "AND, OR, NOT".
   * Examples of valid filters:
   * * "metadata.owner" returns Endpoints that have a label with the
   *   key "owner", this is the same as "metadata:owner"
   * * "metadata.protocol=gRPC" returns Endpoints that have key/value
   *   "protocol=gRPC"
   * * "metadata.owner!=sd AND metadata.foo=bar" returns
   *   Endpoints that have "owner" field in metadata with a value that is not
   *   "sd" AND have the key/value foo=bar.
   * </pre>
   *
   * <code>string endpoint_filter = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for endpointFilter.
   */
  com.google.protobuf.ByteString getEndpointFilterBytes();
}
