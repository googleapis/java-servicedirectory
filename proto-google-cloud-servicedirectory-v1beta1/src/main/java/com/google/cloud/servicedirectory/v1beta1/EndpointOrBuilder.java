/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/servicedirectory/v1beta1/endpoint.proto

package com.google.cloud.servicedirectory.v1beta1;

public interface EndpointOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.servicedirectory.v1beta1.Endpoint)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Immutable. The resource name for the endpoint in the format
   * 'projects/&#42;&#47;locations/&#42;&#47;namespaces/&#42;&#47;services/&#42;&#47;endpoints/&#42;'.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Immutable. The resource name for the endpoint in the format
   * 'projects/&#42;&#47;locations/&#42;&#47;namespaces/&#42;&#47;services/&#42;&#47;endpoints/&#42;'.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Optional. An IPv4 or IPv6 address. Service Directory will reject bad
   * addresses like:
   *   "8.8.8"
   *   "8.8.8.8:53"
   *   "test:bad:address"
   *   "[::1]"
   *   "[::1]:8080"
   * Limited to 45 characters.
   * </pre>
   *
   * <code>string address = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   *
   *
   * <pre>
   * Optional. An IPv4 or IPv6 address. Service Directory will reject bad
   * addresses like:
   *   "8.8.8"
   *   "8.8.8.8:53"
   *   "test:bad:address"
   *   "[::1]"
   *   "[::1]:8080"
   * Limited to 45 characters.
   * </pre>
   *
   * <code>string address = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString getAddressBytes();

  /**
   *
   *
   * <pre>
   * Optional. Service Directory will reject values outside of [0, 65535].
   * </pre>
   *
   * <code>int32 port = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The port.
   */
  int getPort();

  /**
   *
   *
   * <pre>
   * Optional. Metadata for the endpoint. This data can be consumed by service
   * clients.  The entire metadata dictionary may contain up to 512 characters,
   * spread accoss all key-value pairs. Metadata that goes beyond any these
   * limits will be rejected.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  int getMetadataCount();
  /**
   *
   *
   * <pre>
   * Optional. Metadata for the endpoint. This data can be consumed by service
   * clients.  The entire metadata dictionary may contain up to 512 characters,
   * spread accoss all key-value pairs. Metadata that goes beyond any these
   * limits will be rejected.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  boolean containsMetadata(java.lang.String key);
  /** Use {@link #getMetadataMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String> getMetadata();
  /**
   *
   *
   * <pre>
   * Optional. Metadata for the endpoint. This data can be consumed by service
   * clients.  The entire metadata dictionary may contain up to 512 characters,
   * spread accoss all key-value pairs. Metadata that goes beyond any these
   * limits will be rejected.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  java.util.Map<java.lang.String, java.lang.String> getMetadataMap();
  /**
   *
   *
   * <pre>
   * Optional. Metadata for the endpoint. This data can be consumed by service
   * clients.  The entire metadata dictionary may contain up to 512 characters,
   * spread accoss all key-value pairs. Metadata that goes beyond any these
   * limits will be rejected.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  java.lang.String getMetadataOrDefault(java.lang.String key, java.lang.String defaultValue);
  /**
   *
   *
   * <pre>
   * Optional. Metadata for the endpoint. This data can be consumed by service
   * clients.  The entire metadata dictionary may contain up to 512 characters,
   * spread accoss all key-value pairs. Metadata that goes beyond any these
   * limits will be rejected.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  java.lang.String getMetadataOrThrow(java.lang.String key);
}
